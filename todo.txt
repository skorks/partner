long option with string value
  - an option we recognise was passed and it had a value                        DONE
    - it should end up in the options list                                      DONE
    - result should indicate that it was given on the command line              DONE
  - an option we recognise was passed in but it didn't have value               DONE
  - an option was passed in but not one we recognise                            DONE
  - an option was not passed in but has default                                 DONE
    - should be present in the final option list with default value             DONE
    - the result should indicate that it was not passed in on the command line  DONE
  - configured to have different value to the canonical name
    - must ensure starts with -- if not already
    - if starts with single dash, that's an error
    - must have only dashes and small letters in it

short options with string value
  - configuration
    - default case, it is just the one char
    - can be 1 or 2 chars
    - if two chars first char must be -
    - second char (or first if one char) must be small letter, capital letter or number
    - must not conflict with existing short name

long option with boolean value
  - no default given should default to false                        DONE
  - passed on the command                                           DONE
    - should be in the given list                                   DONE
    - should have a value of true                                   DONE
  - default value given should default to that default value        DONE
  - non-boolean default value given, should error                   DONE

short option with boolean value                                     DONE

negated long option (boolean value)
  - for legitimate boolean value                                    DONE
  - for a non-boolean should error                                  DONE

combined short options (-xyz)                                       DONE

multi value short option

multi value long option

short option with value separated by equals

long option with value separated by equals

short option with value in single or double quotes

long option with value in single or double quotes

token -- by itself ends option processing                                  DONE

less important or implement later
----------------------------------
value is not a string (int, float)
value is array
value is hash





* Extract building the options with default values from the options parser


thoughts
---------
the concept of a value source for options and priority for value sources to facilitate injecting config file defaults easily
